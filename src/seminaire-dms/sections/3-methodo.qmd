## Base de données classique

**Table 1: Exemple de base de données**  

| id | nom de voie                 |
|---|:-----------------------------|
| A | du général leclerc           |
| B | du général charles de gaulle |
| C | du point du jour             |
| D | verdier                      |
| E | des cours                   |

## Recherche par token

**Un token = un mot**

Si on cherche **"88 avenue du général charles de gaulle"**, pour chaque nom de voie, on doit compter le nombre de :
- "88"
- "avenue"
- "du"
- "général"
- "charles"
- "de"
- "gaulle"

**C'est extrêment long**

## Index inversé token

**Table 2: Exemple d'index inversé**  

| token     | occurrences              |
|-----------|--------------------------|
| général   | {"A": 1, "B": 1}         |
| jour      | {"A": 1}                 |
| verdier   | {"B": 1}                 |

**On a directement le comptage par token**

## Score par token

Pour retourner la voie la plus pertinente, on construit un score pour chaque voie :
somme occurence x boost pour chaque token de l'adresse recherchée

## Recherche par n-grams de caractères

Contourner les fautes d'orthographes : chaque token est découpé en sous-chaînes de n caractères consécutifs

Exemple : découpage du texte "avenue verdier"  

| token    | 3-grams                 |
|----------|-------------------------|
| avenue   | ave, ven, enu, nue      |
| verdier  | ver, erd, rdi, die, ier |


## Index inversé 3-grams

**Table 3: Exemple d'index inversé 3-grams**  

| 3-grams   | occurrences             |
|-----------|-------------------------|
| "gén"     | {"A": 1, "B": 1}        |
| "char"    | {"B": 1}                |
| "our"     | {"C": 1, "E": 1}        |


## Score par n-grams

Pour retourner la voie la plus pertinente, on construit un score pour chaque voie :
somme occurence x boost pour chaque n-grams de l'adresse recherchée

## Limites des n-grams

- Plus le n-grams est petit, plus le temps de recherche est long
- Limitation à minimum n=3 pour notre cas

## Fuzzi

Contourner les fautes d'orthographes d'une autre façon :

...

## Score global 

Le score global va donc combiner la somme des matchs au niveau :

- token
- n-grams
- fuzziness

Ce score prendra en compte les boosts, le n des n-grams et le niveau de fuzziness choisis au moment du paramétrage du moteur : ceci constitue **la requête**.

# Mettre des couleurs et faire les formules mathématiques !